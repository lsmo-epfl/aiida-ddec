[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "aiida_ddec"

[project]
name = "aiida-ddec"
dynamic = ["version"]
authors = [
    { name = "Aliaksandr Yakutovich", email = "aliaksandr.yakutovich@epfl.ch" },
    { name = "Miriam Pougin", email = "miriam.pougin@epfl.ch" },
]
description = "AiiDA plugin for DDEC code"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AiiDA",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
keywords = ['aiida', 'workflows']
requires-python = '>=3.8'
dependencies = [
    "aiida-core[atomic_tools]~=2.3",
    "aiida-cp2k~=2.0",
    "six",
    "voluptuous",
    "importlib_resources",
]

[project.license]
file = "LICENSE"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/lsmo-epfl/aiida-ddec"

[project.entry-points."aiida.calculations"]
ddec = "aiida_ddec.calculations:DdecCalculation"

[project.entry-points."aiida.parsers"]
ddec = "aiida_ddec.parsers:DdecParser"

[project.entry-points."aiida.workflows"]
"ddec.cp2k_ddec" = "aiida_ddec.workchains:Cp2kDdecWorkChain"

[project.optional-dependencies]
pre-commit = [
    'pre-commit~=3.3',
    'black~=23.7',
    'isort~=5.12',
    'pylint~=2.17',
]
tests = [
    "pgtest~=1.3.1",
    "aiida-testing-dev==0.1.0.dev1",
    "pytest-cov~=2.7",
    "pytest~=6.0",
]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    "import-outside-toplevel",
    "duplicate-code",
]

[tool.pytest.ini_options]
addopts = "--durations=0 --cov=aiida_ddec"
testpaths = [
    "tests",
]
python_functions = "test_*"
python_files = "test_*.py"

filterwarnings = [
    "ignore::DeprecationWarning:frozendict:",
    "ignore::DeprecationWarning:sqlalchemy_utils:",
    "ignore::DeprecationWarning:reentry:",
    "ignore::DeprecationWarning:babel:",
]

[tool.isort]
profile = "black"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    py{39,310,311}
    py38-pre-commit

[testenv]
description = Run the pytest tests
usedevelop=True
extras = tests
commands = pytest {posargs}

[testenv:py38-pre-commit]
description = Run the pre-commit checks
extras =
    tests
    pre-commit
commands = pre-commit run {posargs}
"""
